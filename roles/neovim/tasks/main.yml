---
- name: Install curl
  become: true
  apt:
    pkg:
      - curl
      - unzip
  when: ansible_os_family == "Debian"

- name: Create .config dir
  file:
    dest: ~/.config/nvim
    state: directory
    recurse: true

- name: Copy config files
  copy:
    src: files/
    dest: ~/.config/nvim

- block:
    - name: Download neovim package
      get_url:
        url: "https://github.com/neovim/neovim/releases/download/v{{ neovim_version }}/nvim-linux64.deb"
        dest: /tmp/neovim.deb

    - name: Install neovim
      become: true
      apt:
        deb: /tmp/neovim.deb

    - name: Remove neovim.deb file
      file:
        path: /tmp/neovim.deb
        state: absent
  when: ansible_os_family == "Debian"

- block:
    - name: Install neovim
      community.general.homebrew:
        name: neovim
      ignore_errors: true
  when: ansible_os_family == "Darwin"

# - name: Install go ls
#   shell: go install golang.org/x/tools/gopls@latest

- name: Install other ls with npm
  become: true
  community.general.npm:
    name: "{{ pkg }}"
    global: true
    state: absent
  loop_control:
    loop_var: pkg
  loop:
    - typescript
    - typescript-language-server
    - vscode-langservers-extracted
    - sql-language-server
    - "@tailwindcss/language-server"
    - yaml-language-server
    - bash-language-server
    - dockerfile-language-server-nodejs
    - "@ansible/ansible-language-server"
    - prettier

- name: Install other ls with pip
  pip:
    name: "{{ pkg }}"
    state: absent
  loop_control:
    loop_var: pkg
  loop:
    - python-lsp-server

# - name: Download marksman ls binary
#   get_url:
#     url: "https://github.com/artempyanykh/marksman/releases/download/{{ marksman_version }}/marksman-{% if ansible_os_family == 'Debian' %}linux{% else %}macos{% endif %}"
#     dest: ~/.local/bin/marksman
#     mode: u+x

- name: Remove marksman ls binary
  file:
    path: ~/.local/bin/marksman
    state: absent

- block:
    # - name: Download terraform ls tar file
    #   get_url:
    #     url: "https://github.com/hashicorp/terraform-ls/releases/download/v{{ terraform_ls_version }}/terraform-ls_{{ terraform_ls_version }}_linux_amd64.zip"
    #     dest: ~/.local/bin/terraform_ls.zip

    # - name: Extract terraform ls binary from zip file
    #   unarchive:
    #     extra_opts:
    #       - -j
    #     src: ~/.local/bin/terraform_ls.zip
    #     dest: ~/.local/bin

    # - name: Remove terraform ls zip file
    #   file:
    #     path: ~/.local/bin/terraform_ls.zip
    #     state: absent

    - name: Remove terraform ls binary
      file:
        path: ~/.local/bin/terraform-ls
        state: absent
  when: ansible_os_family == "Debian"

- block:
    - name: Install terraform ls
      community.general.homebrew:
        name: terraform-ls
        state: absent
  when: ansible_os_family == "Darwin"

- block:
    # - name: Download lua ls tar file
    #   get_url:
    #     url: "https://github.com/sumneko/lua-language-server/releases/download/{{ lua_ls_version }}/lua-language-server-{{ lua_ls_version }}-linux-x64.tar.gz"
    #     dest: ~/.local/bin/lua_ls.tar.gz

    # - name: Extract lua ls from tar file
    #   shell: tar xfz ~/.local/bin/lua_ls.tar.gz -C ~/.local/bin

    # - name: Create symlink for binary
    #   file:
    #     src: ~/.local/bin/bin/lua-language-server
    #     dest: ~/.local/bin/lua-language-server
    #     state: link

    # - name: Remove lua ls tar file
    #   file:
    #     path: ~/.local/bin/lua_ls.tar.gz
    #     state: absent

    - name: Remove lua ls binary
      file:
        path: ~/.local/bin/lua-language-server
        state: absent
  when: ansible_os_family == "Debian"

- block:
    - name: Install lua ls
      community.general.homebrew:
        name: lua-language-server
        state: absent
  when: ansible_os_family == "Darwin"

- name: Remove previous packer folder
  file:
    path: ~/.local/share/nvim/site/pack/packer
    state: absent

- block:
    - name: Download ripgrep package
      get_url:
        url: "https://github.com/BurntSushi/ripgrep/releases/download/{{ ripgrep_version }}/ripgrep_{{ ripgrep_version }}_amd64.deb"
        dest: /tmp/ripgrep.deb

    - name: Install ripgrep
      become: true
      apt:
        deb: /tmp/ripgrep.deb
      ignore_errors: true

    - name: Remove ripgrep.deb file
      file:
        path: /tmp/ripgrep.deb
        state: absent
  when: ansible_os_family == "Debian"

- block:
    - name: Install ripgrep
      community.general.homebrew:
        name: ripgrep
      ignore_errors: true
  when: ansible_os_family == "Darwin"
